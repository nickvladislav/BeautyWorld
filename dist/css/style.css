@media only screen and (max-width:992px){.header__image{opacity:.5;z-index:-1}.navigation__list{-webkit-box-pack:center;-ms-flex-pack:center;-ms-flex-wrap:wrap;flex-wrap:wrap;justify-content:center;max-width:350px;row-gap:10px}}@media only screen and (max-width:768px){.header__logo{font-size:16px}.header__number{max-width:90px}.contact__number{font-size:10px}.contact__time{font-size:8px;text-align:center}.navigation__list{display:none}.header__content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-top:100px}.header__image{display:none}.header__main{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;max-width:400px;row-gap:20px}.header__button{margin:0}.header__title{font-size:36px;text-align:center}.social{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}}@media only screen and (max-width:480px){.header__main{row-gap:50px;width:300px}.header__title{font-size:24px;text-align:center}.header__desc{font-size:12px}.footer,.main{display:none}}
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{-webkit-text-size-adjust:100%;line-height:1.15}main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}*{-webkit-box-sizing:border-box;box-sizing:border-box}body{font-family:Montserrat,sans-serif;padding:0}body,h1,h2,h3,h4,h5,h6,p{margin:0}.header{background:url(/Img/header/background.png)}.header__logo{font-size:24px;font-weight:700}.header__top{-webkit-box-pack:justify;-ms-flex-pack:justify;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;display:-webkit-box;display:-ms-flexbox;display:flex;justify-content:space-between;padding:36px 0 6px}.header__subtitle{font-size:20px}.header__number{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;-ms-flex-direction:column;flex-direction:column}.header__content,.header__number{display:-webkit-box;display:-ms-flexbox;display:flex}.header__content{-webkit-box-align:center;-ms-flex-align:center;-webkit-box-pack:justify;-ms-flex-pack:justify;align-items:center;justify-content:space-between;min-height:510px;overflow:hidden;position:relative}.header__main{-webkit-box-orient:vertical;-webkit-box-direction:normal;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;gap:16px 0;width:540px}.header__image{bottom:-4px;right:80px;z-index:1}.header__image img{height:510px;width:524px}.header__button{font-size:14px;margin-top:50px;padding:17px 30px}.header__image{bottom:0;height:510px;position:absolute;right:93px;width:524px}.header__image:before{background-color:#fb9475;border-radius:50%;bottom:-110px;content:"";height:472px;position:absolute;right:0;width:472px;z-index:1}.header__image:after{background-image:url(../Img/header/Girl.png);content:"";height:100%;position:absolute;width:100%;z-index:2}.container{margin:0 auto;max-width:1110px}.nav{display:-webkit-box;display:-ms-flexbox;display:flex;font-size:14px;font-weight:500;gap:28px;list-style:none;padding:0}.navigation-link,a{color:#333;text-decoration:none}a:hover{color:green}.contact__number{font-size:18px;font-weight:500;gap:8px 0}.contact__time{font-size:11px}.social{-webkit-box-orient:vertical;-webkit-box-direction:normal;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;gap:16px 0}.title{font-size:48px;font-weight:600}.desc{font-size:20px;font-weight:400;line-height:32px}.button{background-color:#fb9475;border:none;border-radius:24px;color:#fff;font-family:Montserrat,sans-serif;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.button,.social img{cursor:pointer}.about{padding:100px 0}.about__wrapper{width:570px}.about__video{bottom:-88px;height:297px;left:0;position:relative;width:445px}.about__content{padding-bottom:100px}.about__content,.about__service{-webkit-box-pack:justify;-ms-flex-pack:justify;display:-webkit-box;display:-ms-flexbox;display:flex;justify-content:space-between}.about__title{padding-bottom:32px}.about__text{font-size:16px;line-height:26px}.about__desc{padding-bottom:16px}.icon{cursor:pointer;height:60px;width:60px}.icon__text{bottom:105px;color:#fff;font-size:16px;left:135px;line-height:26px;position:absolute}.icon__text,.service{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.service{width:350px}.service__img{height:48px;margin-bottom:20px;width:48px}.service__text{font-size:14px;font-weight:400;line-height:22px;text-align:center}.subtitle{font-size:18px;font-weight:600;padding-bottom:12px}.text-1{width:296px}.text-2{width:255px}.text-3{width:263px}.service-list__button{font-size:12px;margin-top:16px;padding:10px 20px}.service-list__img{height:180px;margin-bottom:20px;width:350px}.service-list__item{max-width:350px}.service-list__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:30px;row-gap:48px}.service-list__title{padding-bottom:32px}.text-small{font-size:12px;line-height:20px}.service-price{padding:100px}.service-price__wrapper{-ms-flex-wrap:wrap;flex-wrap:wrap;row-gap:32px}.service-price__card,.service-price__wrapper{-webkit-box-pack:justify;-ms-flex-pack:justify;display:-webkit-box;display:-ms-flexbox;display:flex;justify-content:space-between}.service-price__card{width:444px}.service-price__subtitle{font-weight:500;padding-bottom:8px}.service-price__title{padding-bottom:32px}.service-price__navigator{padding-bottom:57px}.service-price__price{color:#00bf78;font-size:20px;font-weight:600}.service-price__link:hover{color:#00bf78;cursor:pointer}.service-price__link:active{text-decoration:underline}.masters{background-color:#f8f6f7;padding:80px}.masters__about{max-width:255px}.masters__wrapper{-webkit-box-pack:justify;-ms-flex-pack:justify;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;justify-content:space-between}.masters__title{padding-bottom:32px}.masters__text{padding-bottom:24px}.masters__photo{cursor:pointer;height:300px;margin-bottom:20px;overflow:hidden;position:relative;text-align:center;width:255px}.masters__sevice{padding-bottom:20px}.masters__link{background-color:#000;color:#fff;font-size:14px;height:300px;left:0;opacity:0;padding:130px 20px;position:absolute;top:0;-webkit-transition:all .3s ease-out;transition:all .3s ease-out;width:255px}.masters__photo:hover .masters__link{color:#fff;opacity:.5}.footer__navigation{-webkit-box-pack:justify;-ms-flex-pack:justify;display:-webkit-box;display:-ms-flexbox;display:flex;justify-content:space-between;padding:20px}.footer__link{color:#278aff;text-decoration:underline}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
